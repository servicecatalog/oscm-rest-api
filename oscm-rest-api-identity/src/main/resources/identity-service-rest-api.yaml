# Copyright FUJITSU LIMITED 2016
swagger: '2.0'
info:
  title: Identity Service REST API
  description: API identity related resources
  version: "1.0.0"

# the domain of the service
host: host_port
# array of schemes that the API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /oscm-identity/v1
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  authentication:
    type: basic
    description: HTTP basic authentication with a user ID and password

security:
  - authentication: []

paths:
  /users
  post:
    summary: User
    description: Create a user
    parameters:
      - name: user
        in: body
        description: The user to create
        required: true
        schema:
          $ref: '#/definitions/User'
      - name: mId
        in: query
        description: The marketplace context
    responses:
      201:
        description: Created
        headers:
          location:
            description: The ID of the new user
            type: string
      202:
        description: Accepted - if a suspending trigger for user creation is active
  get:
    description: Get the users of the calling users organization
    responses:
      200:
        description: the user list
        schema:
          $ref: '#/definitions/CollectionUser'

  /users/{userId}
  get: - get the user details of the specified user
         description: Get the user with the specified id
         responses:
           200:
             description: the user
             schema:
               $ref: '#/definitions/User'

  put:
    description: Update the specified user
    parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        type: string
      - name: user
        in: body
        description: The user with the new values
        required: true
        schema:
          $ref: '#/definitions/User'
      - name: If-Match
        in: header
        description: The ETag of the user for concurrency checks. If not present or '*',  concurrency is ignored.
        required: false
        type: string
    responses:
      204:
        description: No content

  delete:
    description: Delete the specified user
    parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        type: string
      - name: mId
        in: query
        description: The marketplace context
    responses:
      204:
        description: No content

  /users/{userId}/userroles
  get:
    description: Get the user roles of the specified user
    parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        type: string
    responses:
      200:
        description: the user
        schema:
          $ref: '#/definitions/Roles'
  put:
    description: Set the user roles of the specified user
    parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        type: string
      - name: roles
        in: body
        description: The user roles to set
        required: true
        schema:
          $ref: '#/definitions/Roles'
      - name: If-Match
        in: header
        description: The ETag of the user for concurrency checks. If not present or '*',  concurrency is ignored.
        required: false
        type: string
    responses:
      204:
        description: No content

  /ldapusers
  get: - (query parameter 'pattern')
         description: Search users to import in LDAP by pattern
         parameters:
           - name: pattern
             in: query
             description: the search pattern
         responses:
           200:
             description: the matching users found in LDAP
             schema:
               $ref: '#/definitions/CollectionUser'
  post:
    description: Import the specified user from LDAP
    parameters:
      - name: user
        in: body
        description: The user to import
        required: true
        schema:
          $ref: '#/definitions/User'
      - name: mId
        in: query
        description: The marketplace context
    responses:
      201:
        description: Created
        headers:
          location:
            description: The ID of the new user
            type: string

  /onbehalfusers
  post:
    description: Create an on-behalf user
    parameters:
      - name: user
        in: body
        description: The on-behalf user to create
        required: true
        schema:
          $ref: '#/definitions/OnBehalfUser'
    responses:
      201:
        description: Created
        headers:
          location:
            description: The ID of the new user
            type: string
  delete:
    description: Delete the on-behalf user the caller is logged in with
    responses:
      204:
        description: No content

definitions:

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      email:
        type: string
        format: email
      firstName:
        type: string
      additionalName:
        type: string
      lastName:
        type: string
      address:
        type: string
      phone:
        type: string
      locale:
        type: string
      salutation:
        type: string
          enum:
            - MR
            - MS
      realmUserId:
        type: string
      remoteLdapActive:
        type: boolean
      organizationId:
        type: string
      userId:
        type: string
      status:
        type: string
          enum:
            - ACTIVE
            - LOCKED
            - LOCKED_FAILED_LOGIN_ATTEMPTS
            - LOCKED_NOT_CONFIRMED
            - PASSWORD_MUST_BE_CHANGED
      organizationRoles:
        type: array
        items:
          type: string
          enum:
            - BROKER
            - CUSTOMER
            - MARKETPLACE_OWNER
            - PLATFORM_OPERATOR
            - RESELLER
            - SUPPLIER
            - TECHNOLOGY_PROVIDER
      userRoles:
        type: array
        items:
          type: string
          enum:
            - BROKER_MANAGER
            - MARKETPLACE_OWNER
            - ORGANIZATION_ADMIN
            - PLATFORM_OPERATOR
            - RESELLER_MANAGER
            - SERVICE_MANAGER
            - SUBSCRIPTION_MANAGER
            - TECHNOLOGY_MANAGER
            - UNIT_ADMINISTRATOR

  Roles:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      userRoles:
        type: array
        items:
          type: string
          enum:
            - BROKER_MANAGER
            - MARKETPLACE_OWNER
            - ORGANIZATION_ADMIN
            - PLATFORM_OPERATOR
            - RESELLER_MANAGER
            - SERVICE_MANAGER
            - SUBSCRIPTION_MANAGER
            - TECHNOLOGY_MANAGER
            - UNIT_ADMINISTRATOR

  OnBehalfUser:
    type: object
    properties:
      organizationId:
        type: string
      password:
        type: string
      userId:
        type: string

  CollectionUser:
    type: object
    description: Collection of users
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/User'

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      property:
        type: string
      moreInfo:
        type: string
  