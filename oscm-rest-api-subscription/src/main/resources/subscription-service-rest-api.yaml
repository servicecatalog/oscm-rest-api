# Copyright FUJITSU LIMITED 2016
swagger: '2.0'
info:
  title: Subscription Service REST API
  description: API subscription related resources
  version: "1.0.0"

# the domain of the service
host: host_port
# array of schemes that the API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /oscm-subscription/v1
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  authentication:
    type: basic
    description: HTTP basic authentication with a user ID and password

security:
  - authentication: []

paths:

  /subscriptions

  post:
    description: Subscribe to a service
    parameters:
      - name: subscription
        in: body
        description: The input needed to subscribe to a service
        required: true
        schema:
          $ref: '#/definitions/SubscriptionCreation'
    responses:
      201:
        description: Created
        headers:
          location:
            description: The id of the new subscription
            type: number
            format: long
      202:
        description: Accepted - in case of an active suspending trigger for subscribing to a service

  get:
    description: Get all subscriptions of the organization or for a user
    parameters:
      - name: userId
        in: query
        description: the id of the user to get the subscriptions for
        type: string
    responses:
      200:
        description: the subscription list
        schema:
          $ref: '#/definitions/CollectionSubscription'

  /subscriptions/{id}

  get:
    description: Get the details of the subscription specified by the id
    parameters:
      - name: id
        in: path
        description: the id of the subscription
        type: number
        format: long
    responses:
      200:
        description: the subscription details
        schema:
          $ref: '#/definitions/SubscriptionDetails'

  put:
    description: Update the subscription specified by the id
    parameters:
      - name: id
        in: path
        description: The subscription id
        required: true
        type: number
        format: long
      - name: subscription
        in: body
        description: The new subscription and parameter values
        required: true
        schema:
          $ref: '#/definitions/SubscriptionCreation'
    responses:
      202:
        description: Accepted - in case of an active suspending trigger for modify subscription
      204:
        description: No content

  delete:
    description: Delete/unsubscribe from the subscription specified by the id
    parameters:
      - name: id
        in: path
        description: The subscription id
        required: true
        type: number
        format: long
    responses:
      202:
        description: Accepted - in case of an active suspending trigger for unsubscribing
      204:
        description: No content

  /subscriptions/{id}/usagelicenses

  get:
    description: Get the usage licenses for the subscription specified by the id
    parameters:
      - name: id
        in: path
        description: The id of the subscription
        required: true
        type: integer
        format: int64
    responses:
      200:
        description: the usage license list
        schema:
          $ref: '#/definitions/CollectionUsageLicense'

  post:
    description: Create a usage license for the specified subscription
    parameters:
      - name: id
        in: path
        description: The subscription id
        required: true
        type: number
        format: long
      - name: usage license
        in: body
        description: The usage license
        required: true
        schema:
          $ref: '#/definitions/UsageLicense'
    responses:
      201:
        description: Created
        headers:
          location:
            description: The id of the new usage license
            type: number
            format: long
      202:
        description: Accepted - in case of an active suspending trigger for add/revoke user

  /subscriptions/{id}/usagelicenses/{licKey}

  put:
    description: Modify the specified usage license
    parameters:
      - name: id
        in: path
        description: The subscription id
        required: true
        type: number
        format: long
      - name: licKey
        in: path
        description: The usage license id
        required: true
        type: number
        format: long
      - name: usage license
        in: body
        description: The usage license with the new value
        required: true
        schema:
          $ref: '#/definitions/UsageLicense'
    responses:
      202:
        description: Accepted - in case of an active suspending trigger for add/revoke user
      204:
        description: No content

  delete: - delete the specified usage license
            description: Delete the usage license (revoke the user form the subscription)
            parameters:
              - name: id
                in: path
                description: The subscription id
                required: true
                type: number
                format: long
              - name: licKey
                in: path
                description: The usage license id
                required: true
                type: number
                format: long
            responses:
              202:
                description: Accepted - in case of an active suspending trigger for add/revoke user
              204:
                description: No content

definitions:

  BillingContact
  type: object
  properties:
    id:
      type: integer
      format: int64
    etag:
      type: integer
      format: int64
    contactId:
      type: string

  EventDefinition
  type: object
  properties:
    id:
      type: integer
      format: int64
    etag:
      type: integer
      format: int64
    eventType:
      type: string
      enum:
        - PLATFORM_EVENT
        - SERVICE_EVENT
    eventId:
      type: string
    eventDescription:
      type: string

  OperationParameter
  type: object
  properties:
    id:
      type: integer
      format: int64
    etag:
      type: integer
      format: int64
    parameterId:
      type: string
    parameterName:
      type: string
    mandatory:
      type: boolean
    type:
      type: string
      enum:
        - INPUT_STRING
        - REQUEST_SELECT
    parameterValue:
      type: string

  Operation
  type: object
  properties:
    id:
      type: integer
      format: int64
    etag:
      type: integer
      format: int64
    operationId:
      type: string
    operationName:
      type: string
    operationDescription:
      type: string
    operationParameters:
      type: array
      items:
        type: object
        $ref: '#/definitions/OperationParameter'

  ParameterDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      parameterId:
        type: string

  Parameter:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      parameterDefinition:
        type: object
        $ref: '#/definitions/ParameterDefinition'
      value:
        type: string

  PaymentInfo:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      infoId:
        type: string

  PricedEvent:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      steppedPrices:
        type: array
        items:
          type: object
          $ref: '#/definitions/SteppedPrice'
      eventDefinition:
        type: object
        $ref: '#/definitions/EventDefinition'
      eventPrice:
        type: number

  PricedOption:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      pricePerUser:
        type: number
      pricePerSubscription:
        type: number
      parameterOptionKey:
        type: integer
        format: int64
      optionId:
        type: string
      roleSpecificUserPrices:
        type: array
        items:
          type: object
          $ref: '#/definitions/PricedRole'

  PricedParameter:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      parameterDef:
        type: object
        $ref: '#/definitions/EventDefinition'
      pricePerUser:
        type: number
      pricePerSubscription:
        type: number
      parameterKey:
        type: integer
        format: int64
      roleSpecificUserPrices:
        type: array
        items:
          type: object
          $ref: '#/definitions/PricedRole'
      steppedPrices:
        type: array
        items:
          type: object
          $ref: '#/definitions/SteppedPrice'
      pricedOptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/PricedOption'

  PricedRole:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      pricePerUser:
        type: number
      role:
        type: object
        $ref: '#/definitions/RoleDefinition'

  PriceModel:

  RoleDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      roleId:
        type: string
      name:
        type: string
      description:
        type: string

  Service:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      serviceId:
        type: string
      parameters:
        type: array
        items:
          type: object
          $ref: '#/definitions/Parameter'

  SteppedPrice:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      limit:
        type: integer
        format: int64
      price:
        type: number

  SubscriptionCreation
  type: object
  properties:
    id:
      type: integer
      format: int64
    etag:
      type: integer
      format: int64
    billingContactKey:
      type: integer
      format: int64
    paymentInfoKey:
      type: integer
      format: int64
    users:
      type: array
      items:
        type: object
        $ref: '#/definitions/UsageLicense'
    udas:
      type: array
      items:
        type: object
        $ref: '#/definitions/Uda'
    service:
      type: object
      $ref: '#/definitions/Service'
    purchaseOrderNumber:
      type: string
    subscriptionId:
      type: string
    unitKey:
      type: integer
      format: int64
    unitName:
      type: string

  SubscriptionDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      billingContact:
        type: object
        $ref: '#/definitions/BillingContact'
      paymentInfo:
        type: object
        $ref: '#/definitions/PaymentInfo'
      usageLicenses:
        type: array
        items:
          type: object
          $ref: '#/definitions/UsageLicense'
      service:
        type: object
        $ref: '#/definitions/Service'
      operations:
        type: array
        items:
          type: object
          $ref: '#/definitions/Operation'
      priceModel:
        type: object
        $ref: '#/definitions/PriceModel'
      activationDate:
        type: integer
        format: int64
      creationDate:
        type: integer
        format: int64
      deactivationDate:
        type: integer
        format: int64
      serviceAccessInfo:
        type: string
      serviceLoginPath:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - DEACTIVATED
          - EXPIRED
          - INVALID
          - PENDING
          - PENDING_UPD
          - SUSPENDED
          - SUSPENDED_UPD
      serviceInstanceId:
        type: string
      timeoutMailSent:
        type: boolean
      purchaseOrderNumber:
        type: string
      subscriptionId:
        type: string
      provisioningProgress:
        type: string
      numberOfAssignedUsers:
        type: integer
        format: int32
      unitKey:
        type: integer
        format: int64
      unitName:
        type: string
      successInfo:
        type: string

  Subscription:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      activationDate:
        type: integer
        format: int64
      creationDate:
        type: integer
        format: int64
      deactivationDate:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DEACTIVATED
          - EXPIRED
          - INVALID
          - PENDING
          - PENDING_UPD
          - SUSPENDED
          - SUSPENDED_UPD
      subscriptionId:
        type: string
      unitKey:
        type: integer
        format: int64
      unitName:
        type: string
      usageLicense:
        type: object
        $ref: '#/definitions/UsageLicense'

  UdaDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
    private String udaId:
      type: string
    private String targetType:
      type: string
    private String defaultValue:
      type: string
    private UdaConfigurationType configurationType:
      type: string
      enum:
        - SUPPLIER
        - USER_OPTION_MANDATORY
        - USER_OPTION_OPTIONAL

  Uda:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      udaDefinition:
        type: object
        $ref: '#/definitions/UdaDefinition'
      udaValue:
        type: string
      targetObjectKey:
        type: integer
        format: int64

  UsageLicense:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      user:
        type: object
        $ref: '#/definitions/User'
      role:
        type: object
        $ref: '#/definitions/RoleDefinition'

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      userId:
        type: string

  CollectionSubscription:
    type: object
    description: Collection of subscriptions
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Subscription'

  CollectionUsageLicense:
    type: object
    description: Collection of usage licenses
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/UsageLicense'

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      property:
        type: string
      moreInfo:
        type: string
  