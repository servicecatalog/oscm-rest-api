# Copyright FUJITSU LIMITED 2016
swagger: '2.0'
info:
  title: Marketplace Service REST API
  description: API marketplace related resources
  version: "1.0.0"

# the domain of the service
host: host_port
# array of schemes that the API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /oscm-marketplace/v1
consumes:
  - application/json
produces:
  - application/json
  
securityDefinitions:
  authentication:
    type: basic
    description: HTTP basic authentication with a user ID and password

security:
  - authentication: []
  
paths:

  /marketplaces
    get:
      description: Get marketplaces according to specified list type
      parameters:
        - name: listType
          in: query
          description: the list type
          type: string
            enum:
              - OWNED
              - ALL
              - PUBLISH
              - ACCESSIBLE
      responses:
        200:
          description: the marketplace list
          schema:
              $ref: '#/definitions/CollectionMarketplace'
    post:
      description: Create a marketplace
      parameters:
        - name: marketplace
          in: body
          description: The marketplace to create
          required: true
          schema:
            $ref: '#/definitions/Marketplace'
      responses:
        201:
          description: Created
          headers:
            location:
              description: The ID of the new marketplace
              type: number
              format: long

  /marketplaces/{id}
    get:
      description: get the marketplace with the specified ID
      parameters:
        - name: id
          in: path
          description: The ID of the marketplace
          required: true
          type: number
          format: long
      responses:
        200:
          description: the marketplace list
          schema:
              $ref: '#/definitions/Marketplace'
    put:
      description: Update the specified marketplace
      parameters:
        - name: id
          in: path
          description: The marketplace id
          required: true
          type: number
          format: long
        - name: marketplace
          in: body
          description: The marketplace with the new values 
          required: true
          schema:
            $ref: '#/definitions/Marketplace'
        - name: If-Match
          in: header
          description: The ETag of the user for concurrency checks. If not present or '*',  concurrency is ignored.
          required: false
          type: string
      responses:
        204:
          description: No content
    delete:
      description: Delete the specified marketplace
      parameters:
        - name: id
          in: path
          description: The marketplace ID
          required: true
          type: number
          format: long
      responses:
        204:
          description: No content

  /marketplaces/{id}/entries/{sKey}
    put: - set/update the catalog entry for the service ('sKey')
      description: Set/update the catalog entry for the service specified path parameter 'sKey'
      parameters:
        - name: id
          in: path
          description: The marketplace id
          required: true
          type: number
          format: long
        - name: sKey
          in: path
          description: The service id
          required: true
          type: number
          format: long
        - name: catalog entry
          in: body
          description: The catalog entry with the new values 
          required: true
          schema:
            $ref: '#/definitions/Entry'
      responses:
        204:
          description: No content

definitions:

  Marketplace:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      marketplaceId;
        type: string
      name;
        type: string
      open;
        type: boolean
      tenantId;
        type: string
      taggingEnabled;
        type: boolean
      reviewEnabled;
        type: boolean
      socialBookmarkEnabled;
        type: boolean
      categoriesEnabled;
        type: boolean
      restricted;
        type: boolean
      hasPublicLandingPage;
        type: boolean
      owningOrganizationName;
        type: string
      owningOrganizationId;
        type: string

  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      categoryId;
        type: string
  
  Entry:
    type: object
    properties:
      id:
        type: integer
        format: int64
      etag:
        type: integer
        format: int64
      anonymousVisible;
        type: boolean
      categories;
        type: array
        items: 
          $ref: '#/definitions/Category'
      visibleInCatalog;
        type: boolean

  CollectionMarketplace:
    type: object
    description: Collection of marketplaces
    properties:
      items:
        type: array
        items: 
          $ref: '#/definitions/Marketplace'

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      property:
        type: string
      moreInfo:
        type: string
  